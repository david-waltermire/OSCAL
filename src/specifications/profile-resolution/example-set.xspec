<?xml version="1.0" encoding="UTF-8"?>
<!-- autogenerated 2021-12-14T16:02:57.305-05:00 following model in example-set.xspec-->
<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
               xmlns:opr="http://csrc.nist.gov/ns/oscal/profile-resolution"
               xmlns:o="http://csrc.nist.gov/ns/oscal/1.0"
               stylesheet="../../utils/util/resolver-pipeline/oscal-profile-RESOLVE.xsl"
               run-as="external"
               xmlns:ov="http://csrc.nist.gov/ns/oscal/test/variable">
   <x:helper stylesheet="lib/oscal-profile-test-helper.xsl"/>
   <!-- old tests are out of whack need update to current functionality /spec  -->
   <!-- but the XSpec provides a functional model -->
   <x:scenario label="Base test">
      <!-- Alternative model for test scrubbing both the result and the expected
           result for comparison -->
      <x:context href="profile-resolution-examples/base-test_profile.xml"/>
      <x:variable name="ov:expected-output"
         href="profile-resolution-examples/output-expected/base-test_profile_RESOLVED.xml"/>
      <x:expect label="Base test - fully resolved"
         test="opr:scrub($x:result)" select="opr:scrub($ov:expected-output)"/>
   </x:scenario>
   
   <x:scenario label="Testing base-test_profile.xml">
      
      <x:context href="profile-resolution-examples/base-test_profile.xml"/>
      <x:expect label="Resolution of base-test_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/base-test_profile_RESOLVED.xml"/>
   </x:scenario>
   <x:scenario label="Testing base2-test_profile.xml">
      <x:context href="profile-resolution-examples/base2-test_profile.xml"/>
      <x:expect label="Resolution of base2-test_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/base2-test_profile_RESOLVED.xml"/>
   </x:scenario>
   <x:scenario label="Testing broken_profile.xml" pending="galtm">
      <x:context href="profile-resolution-examples/broken_profile.xml"/>
      <x:expect label="Resolution of broken_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/broken_profile_RESOLVED.xml"/>
   </x:scenario>
   <x:scenario label="Testing circular_profile.xml">
      <x:context href="profile-resolution-examples/circular_profile.xml"/>
      <x:expect label="Resolution of circular_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/circular_profile_RESOLVED.xml"/>
   </x:scenario>
   <x:scenario label="Testing exclude-call-test_profile.xml">
      <x:context href="profile-resolution-examples/exclude-call-test_profile.xml"/>
      <x:expect label="Resolution of exclude-call-test_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/exclude-call-test_profile_RESOLVED.xml"/>
   </x:scenario>
   <x:scenario label="Testing full-test_profile.xml">
      <x:context href="profile-resolution-examples/full-test_profile.xml"/>
      <x:expect label="Resolution of full-test_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/full-test_profile_RESOLVED.xml"/>
   </x:scenario>
   <x:scenario label="Testing home_profile.xml">
      <x:context href="profile-resolution-examples/home_profile.xml"/>
      <x:expect label="Resolution of home_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/home_profile_RESOLVED.xml"/>
   </x:scenario>
   <x:scenario label="Testing import-twice_profile.xml">
      <x:context href="profile-resolution-examples/import-twice_profile.xml"/>
      <x:expect label="Resolution of import-twice_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/import-twice_profile_RESOLVED.xml"/>
   </x:scenario>
   <x:scenario label="Testing include-all-no-children-test_profile.xml">
      <x:context href="profile-resolution-examples/include-all-no-children-test_profile.xml"/>
      <x:expect label="Resolution of include-all-no-children-test_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/include-all-no-children-test_profile_RESOLVED.xml"/>
   </x:scenario>
   <x:scenario label="Testing include-all-test_profile.xml">
      <x:context href="profile-resolution-examples/include-all-test_profile.xml"/>
      <x:expect label="Resolution of include-all-test_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/include-all-test_profile_RESOLVED.xml"/>
   </x:scenario>
   <x:scenario label="Testing include-call-with-children-test_profile.xml">
      <x:context href="profile-resolution-examples/include-call-with-children-test_profile.xml"/>
      <x:expect label="Resolution of include-call-with-children-test_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/include-call-with-children-test_profile_RESOLVED.xml"/>
      <x:expect label="Includes grandparent in result" test="$x:result//o:control/@id = 'c3'"/>
      <x:expect label="Includes grandchild in result"  test="$x:result//o:control/@id = 'c3.a-1'"/>
      <x:expect label="Is missing a control not included"   test="not( $x:result//o:control/@id = 'c2' )"/>
   </x:scenario>
   <x:scenario label="Testing include-loose-param-test_profile.xml">
      <x:context href="profile-resolution-examples/include-loose-param-test_profile.xml"/>
      <x:expect label="Resolution of include-loose-param-test_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/include-loose-param-test_profile_RESOLVED.xml"/>
   </x:scenario>
   <x:scenario label="Testing include-match-test_profile.xml">
      <x:context href="profile-resolution-examples/include-match-test_profile.xml"/>
      <x:expect label="Resolution of include-match-test_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/include-match-test_profile_RESOLVED.xml"/>
   </x:scenario>
   <x:scenario label="Testing merge-implicit-keep_profile.xml">
      <x:context href="profile-resolution-examples/merge-implicit-keep_profile.xml"/>
      <x:expect label="Resolution of merge-implicit-keep_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/merge-implicit-keep_profile_RESOLVED.xml"/>
   </x:scenario>
   <x:scenario label="Testing merge-keep-resources_profile.xml">
      <x:context href="profile-resolution-examples/merge-keep-resources_profile.xml"/>
      <x:expect label="Resolution of merge-keep-resources_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/merge-keep-resources_profile_RESOLVED.xml"/>
   </x:scenario>
   <x:scenario label="Testing merge-keep_profile.xml">
      <x:context href="profile-resolution-examples/merge-keep_profile.xml"/>
      <x:expect label="Resolution of merge-keep_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/merge-keep_profile_RESOLVED.xml"/>
   </x:scenario>
   <x:scenario label="Testing modify-adds_profile.xml">
      <x:context href="profile-resolution-examples/modify-adds_profile.xml"/>
      <x:expect label="Resolution of modify-adds_profile.xml"
                select="opr:scrub(.)"
                href="profile-resolution-examples/output-expected/modify-adds_profile_RESOLVED.xml"/>
   </x:scenario>
</x:description>
